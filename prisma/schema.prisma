generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  //shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id       String @id @default(uuid())
  email    String
  password String
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  username      String         @unique
  password      String
  PersonalBests PersonalBest[]
  WorkoutPlans  WorkoutPlan[]
}

model WorkoutPlan {
  id            String         @id @default(uuid())
  title         String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  planId        String
  ScheduleCards ScheduleCard[]
  plan          User           @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@index([planId])
}

model ScheduleCard {
  id            String      @id @default(uuid())
  day           String
  exerciseTitle String
  weight        Decimal
  sets          Int
  reps          Int
  firstWeight   Decimal
  firstSet      Int
  firstRep      Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  ScheduleID    String
  Schedule      WorkoutPlan @relation(fields: [ScheduleID], references: [id], onDelete: Cascade)

  @@index([ScheduleID])
}

model PersonalBest {
  id            String   @id @default(uuid())
  exerciseTitle String
  weight        Decimal
  color         String   @default("boxDarkPink")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  recordId      String
  record        User     @relation(fields: [recordId], references: [id])

  @@index([recordId])
}
